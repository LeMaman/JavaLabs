package chat.application;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

public class ChatSystemTests {

    @Test
    public void testBasicMessage() {
        Message message = new BasicMessage("Test Message");
        assertEquals("Test Message", message.getContent());
    }

    @Test
    public void testEncryptedMessageDecorator() {
        Message message = new BasicMessage("Test Message");
        message = new EncryptedMessageDecorator(message);
        assertNotEquals("Test Message", message.getContent());
        // –ï–Ω–∫—Ä—ñ–ø—à–Ω –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∏—Ö–æ–≤—É–≤–∞—Ç–∏ —Å–ø—Ä–∞–≤–∂–Ω—ñ–π —Ç–µ–∫—Å—Ç
    }

    @Test
    public void testEmojiMessageDecorator() {
        Message message = new BasicMessage("Hello");
        message = new EmojiMessageDecorator(message);
        assertTrue(message.getContent().contains("üòä"));
        // –°–ø–æ–¥—ñ–≤–∞—î–º–æ—Å—è, –¥–æ–¥–∞–ª–æ—Å—è –µ–º–æ–¥–∂—ñ
    }

    @Test
    public void testMediatorAddsUsers() {
        ChatMediator mediator = new ChatMediatorImpl();
        User user = new UserImpl(mediator, "TestUser");
        mediator.addUser(user);
        assertTrue(mediator.getUsers().contains(user));
    }

    @Test
    public void testUserSendsMessage() {
        ChatMediator mediator = new ChatMediatorImpl();
        User user1 = new UserImpl(mediator, "Alice");
        User user2 = new UserImpl(mediator, "Bob");
        mediator.addUser(user1);
        mediator.addUser(user2);

        Message message = new BasicMessage("Hello, Bob!");
        user1.sendMessage(message.getContent());

        // —â–µ –Ω–µ –ø–µ–≤–µ–Ω —â–æ–¥–æ —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó —Ü—å–æ–≥–æ, –∞–ª–µ –æ—á—ñ–∫—É—é, —â–æ –∑–º–æ–∂—É –≤—ñ–¥—Ç–≤–æ—Ä–∏—Ç–∏
        assertTrue(user2.getReceivedMessages().contains("Hello, Bob!"));
    }
}

